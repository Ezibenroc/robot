-module(myLists).
-include_lib("eunit/include/eunit.hrl").
-export([set_/4,get_/3,difference/2,add/2,union/2,print/1,getMap1/0,getState1/0,getState2/0,getEntryPoints/0,getExitPoints/0,getState3/0,getState4/0]).

% set_ the N-th cell of the list to X
% Index begin by 1
set_(1,X,[_|T]) -> [X|T];
set_(N,X,[H|T]) -> [H|set_(N-1,X,T)].

%% The map is stored as a list of lists.

% set_ the cell (N,M) of the given map to X.
set_(1,M,X,[H|T]) -> [set_(M,X,H)|T];
set_(N,M,X,[H|T]) -> [H|set_(N-1,M,X,T)].

% Get the cell (N,M) of the given map.
get_(N,M,L) -> lists:nth(M,lists:nth(N,L)).

% Difference of lists. Returns elements of L1 which are not in L2.
difference(L1,L2) ->
    lists:filter(fun (X) -> lists:all(fun (Y) -> X=/=Y end, L2) end, L1).

% Add the element X to the list if does not already exist.
add(X,[]) -> [X];
add(X,[H|T]) ->
    case H of
        X -> [H|T];
        _ -> [H|add(X,T)]
    end.

% Union of lists.
union(L1,L2) -> lists:foldl(fun(X, Result) -> add(X,Result) end, L1, L2).

% Transform the given character
charTransform(C)->
    case C of
        "o" -> " ";
        X -> X
    end.

% Transform the given cell
cellTransform({C,N})->
    case {C,N} of
        {X,0} -> charTransform(X);
        {"r",N} -> charTransform("r");
        {_,N} -> "g"
    end.

% Print the given map.
printMap([]) -> nope;
printMap([H|T]) -> 
    io:fwrite("|~s|\n",[lists:foldl(fun(X,Acc) -> string:concat(string:concat(Acc," "),cellTransform(X)) end, "", H)]), 
    printMap(T).
print([]) ->
    io:fwrite("EMPTY MAP\n");
print([H|T]) ->
    io:fwrite(" ~s\n",[lists:foldl(fun(_,Acc) -> string:concat(string:concat(Acc,"-"),"-") end, "", H)]),
    printMap([H|T]),
    io:fwrite(" ~s\n",[lists:foldl(fun(_,Acc) -> string:concat(string:concat(Acc,"-"),"-") end, "", H)]).


getMap1() ->
    [
    [{"r",0},{" ",0},{"x",0},{"r",0},{" ",0},{" ",0},{" ",0},{" ",0},{" ",0}],
    [{" ",0},{" ",0},{"x",0},{"x",0},{" ",0},{" ",0},{" ",0},{" ",5},{" ",0}],
    [{" ",0},{" ",0},{" ",0},{"x",0},{" ",0},{" ",0},{" ",0},{" ",0},{" ",0}],
    [{" ",0},{" ",0},{" ",0},{"x",0},{"x",0},{" ",0},{" ",0},{" ",0},{" ",0}],
    [{" ",0},{" ",0},{" ",0},{"x",0},{"x",0},{" ",0},{" ",0},{" ",0},{" ",0}],
    [{" ",0},{"r",0},{" ",0},{" ",0},{" ",0},{" ",0},{" ",0},{" ",0},{" ",0}],
    [{" ",0},{" ",0},{" ",0},{" ",3},{" ",0},{" ",0},{" ",0},{" ",0},{" ",7}],
    [{" ",0},{" ",0},{" ",0},{" ",0},{" ",0},{" ",0},{" ",0},{" ",0},{" ",1}],
    [{" ",0},{" ",0},{" ",0},{" ",0},{" ",0},{" ",0},{" ",0},{" ",0},{"r",0}]
    ].

getEntryPoints() -> [{3,3},{8,2}].
getExitPoints() -> [{6,3}].

getState1() ->
    {getEntryPoints(),getExitPoints(),getMap1()}. % Entry points, Exit points, Map

getMap2() ->
    [
    [{" ",0},{" ",0},{"x",0},{" ",0},{" ",0},{" ",0},{" ",0},{" ",0},{" ",0}],
    [{" ",0},{" ",0},{"x",0},{"x",0},{" ",0},{" ",0},{" ",0},{" ",5},{" ",0}],
    [{" ",0},{" ",0},{" ",0},{"x",0},{" ",0},{" ",0},{" ",0},{" ",0},{" ",0}],
    [{" ",0},{" ",0},{" ",0},{"x",0},{"x",0},{" ",0},{" ",0},{" ",0},{" ",0}],
    [{" ",0},{" ",0},{" ",0},{"x",0},{"x",0},{" ",0},{" ",0},{" ",0},{" ",0}],
    [{" ",0},{" ",0},{" ",0},{" ",0},{" ",0},{" ",0},{" ",0},{" ",0},{" ",0}],
    [{" ",0},{" ",0},{" ",0},{" ",3},{" ",0},{" ",0},{" ",0},{" ",0},{" ",7}],
    [{" ",0},{" ",0},{" ",0},{" ",0},{" ",0},{" ",0},{" ",0},{" ",0},{" ",0}],
    [{" ",0},{" ",0},{" ",0},{" ",0},{" ",0},{" ",0},{" ",0},{" ",0},{" ",0}]
    ].
getState2() ->
    {getEntryPoints(),getExitPoints(),getMap2()}. % Entry points, Exit points, Map

getMap3() ->
    [
    [{" ",0},{" ",0},{"x",0},{" ",0},{" ",0},{" ",0},{" ",0},{" ",0},{" ",0},{" ",0},{" ",0},{" ",0},{" ",0},{" ",0},{" ",0},{" ",0},{" ",0},{" ",0}],
    [{" ",0},{" ",0},{"x",0},{"x",0},{" ",0},{" ",0},{" ",0},{" ",0},{" ",0},{" ",0},{" ",0},{" ",0},{" ",0},{" ",0},{" ",0},{" ",0},{" ",5},{" ",0}],
    [{" ",0},{" ",0},{" ",0},{"x",0},{" ",0},{" ",0},{" ",0},{" ",0},{" ",0},{" ",0},{" ",0},{" ",0},{" ",0},{" ",0},{" ",0},{" ",0},{" ",0},{" ",0}],
    [{" ",0},{" ",0},{" ",0},{"x",0},{"x",0},{" ",0},{" ",0},{" ",0},{" ",0},{" ",0},{" ",0},{" ",0},{" ",0},{"x",0},{" ",0},{" ",0},{" ",0},{" ",0}],
    [{" ",0},{" ",0},{" ",0},{"x",0},{"x",0},{" ",0},{" ",0},{" ",0},{" ",0},{" ",0},{" ",0},{" ",0},{" ",0},{"x",0},{" ",0},{" ",0},{" ",0},{" ",0}],
    [{" ",0},{" ",0},{" ",0},{" ",0},{" ",0},{" ",0},{" ",0},{" ",0},{" ",2},{" ",0},{" ",0},{" ",0},{" ",0},{"x",0},{" ",0},{" ",0},{" ",0},{" ",0}],
    [{" ",0},{" ",0},{" ",0},{" ",3},{" ",0},{" ",0},{" ",0},{" ",0},{" ",0},{" ",0},{" ",0},{" ",0},{" ",0},{"x",0},{" ",0},{" ",0},{" ",0},{" ",7}],
    [{" ",0},{" ",0},{" ",0},{" ",0},{" ",0},{" ",0},{"x",0},{"x",0},{"x",0},{"x",0},{" ",0},{" ",0},{" ",0},{"x",0},{" ",0},{" ",0},{" ",0},{" ",0}],
    [{" ",0},{" ",0},{" ",0},{" ",0},{" ",0},{" ",0},{" ",0},{" ",0},{" ",0},{" ",0},{" ",1},{" ",0},{" ",0},{"x",0},{" ",0},{" ",0},{" ",0},{" ",0}],
    [{" ",0},{" ",0},{" ",4},{" ",0},{" ",0},{" ",0},{"x",0},{"x",0},{"x",0},{"x",0},{" ",0},{" ",0},{" ",0},{" ",0},{" ",0},{" ",0},{" ",0},{" ",0}],
    [{" ",0},{" ",0},{" ",0},{" ",0},{" ",0},{" ",0},{" ",0},{" ",0},{" ",0},{" ",0},{" ",0},{" ",0},{" ",0},{" ",0},{" ",0},{" ",0},{" ",0},{" ",0}],
    [{" ",0},{" ",0},{" ",0},{" ",0},{" ",0},{" ",0},{" ",0},{" ",2},{" ",0},{" ",0},{" ",0},{" ",0},{" ",0},{" ",0},{" ",0},{" ",0},{" ",0},{" ",0}],
    [{" ",0},{" ",0},{" ",0},{" ",0},{" ",0},{" ",0},{" ",0},{" ",0},{" ",0},{" ",0},{" ",0},{" ",0},{" ",0},{" ",0},{" ",0},{" ",0},{" ",0},{" ",0}],
    [{" ",0},{" ",0},{" ",0},{" ",0},{" ",0},{" ",0},{" ",0},{" ",0},{" ",0},{" ",0},{" ",0},{" ",0},{" ",0},{" ",0},{" ",0},{" ",0},{" ",0},{" ",0}]
    ].
getState3() ->
    {getEntryPoints(),getExitPoints(),getMap3()}. % Entry points, Exit points, Map

getMap4() ->
    [
    [{"x",0},{"x",0},{"x",0},{"x",0},{"x",0},{"x",0},{"x",0},{"x",0},{"x",0},{"x",0},{"x",0},{"x",0},{"x",0},{"x",0},{"x",0},{"x",0},{"x",0},{"x",0}],
    [{"x",0},{"x",0},{"x",0},{"x",0},{"x",0},{"x",0},{"x",0},{"x",0},{"x",0},{"x",0},{"x",0},{"x",0},{"x",0},{"x",0},{" ",0},{" ",0},{" ",5},{" ",0}],
    [{"x",0},{"x",0},{" ",0},{" ",0},{" ",0},{" ",0},{"x",0},{"x",0},{"x",0},{"x",0},{"x",0},{"x",0},{"x",0},{"x",0},{" ",0},{"x",0},{"x",0},{" ",0}],
    [{"x",0},{"x",0},{"x",0},{" ",0},{"x",0},{" ",0},{"x",0},{"x",0},{"x",0},{"x",0},{"x",0},{"x",0},{" ",0},{" ",0},{" ",0},{"x",0},{"x",0},{" ",0}],
    [{"x",0},{"x",0},{"x",0},{" ",0},{"x",0},{" ",0},{" ",0},{"x",0},{" ",0},{" ",0},{" ",0},{"x",0},{" ",0},{"x",0},{"x",0},{"x",0},{"x",0},{" ",0}],
    [{"x",0},{"x",0},{"x",0},{" ",0},{"x",0},{"x",0},{" ",0},{"x",0},{" ",2},{"x",0},{" ",0},{"x",0},{" ",0},{"x",0},{" ",0},{" ",0},{"x",0},{" ",0}],
    [{"x",0},{"x",0},{"x",0},{" ",3},{"x",0},{"x",0},{" ",0},{" ",0},{" ",0},{"x",0},{" ",0},{"x",0},{" ",0},{"x",0},{" ",0},{"x",0},{"x",0},{" ",7}],
    [{"x",0},{" ",0},{"x",0},{"x",0},{"x",0},{"x",0},{"x",0},{" ",0},{" ",0},{"x",0},{" ",0},{"x",0},{" ",0},{"x",0},{" ",0},{"x",0},{"x",0},{" ",0}],
    [{"x",0},{" ",0},{"x",0},{"x",0},{"x",0},{"x",0},{"x",0},{" ",0},{"x",0},{"x",0},{" ",1},{"x",0},{" ",0},{"x",0},{" ",0},{"x",0},{"x",0},{" ",0}],
    [{"x",0},{" ",0},{" ",4},{"x",0},{"x",0},{"x",0},{"x",0},{" ",0},{"x",0},{"x",0},{" ",0},{"x",0},{" ",0},{"x",0},{" ",0},{"x",0},{"x",0},{" ",0}],
    [{"x",0},{"x",0},{" ",0},{" ",0},{" ",0},{" ",0},{"x",0},{" ",0},{"x",0},{"x",0},{" ",0},{"x",0},{" ",0},{"x",0},{" ",0},{"x",0},{"x",0},{" ",0}],
    [{"x",0},{"x",0},{" ",0},{" ",0},{"x",0},{" ",0},{" ",0},{" ",2},{"x",0},{"x",0},{" ",0},{"x",0},{" ",0},{"x",0},{" ",0},{"x",0},{"x",0},{" ",0}],
    [{"x",0},{"x",0},{"x",0},{"x",0},{"x",0},{"x",0},{"x",0},{"x",0},{"x",0},{"x",0},{" ",0},{" ",0},{" ",0},{"x",0},{" ",0},{" ",0},{" ",0},{" ",0}],
    [{"x",0},{"x",0},{"x",0},{"x",0},{"x",0},{"x",0},{"x",0},{"x",0},{"x",0},{"x",0},{"x",0},{"x",0},{"x",0},{"x",0},{"x",0},{"x",0},{"x",0},{"x",0}]
    ].
getState4() ->
    {getEntryPoints(),[],getMap4()}. % Entry points, Exit points, Map
